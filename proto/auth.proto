syntax = "proto3";

package sso;

service Auth {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc IsAdmin(IsAdminRequest) returns (IsAdminResponse);
  rpc ActivateUser(ActivateUserRequest) returns (ActivateUserResponse);
  rpc RenewAccessToken(RenewAccessTokenRequest)
      returns (RenewAccessTokenResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc NewActivationToken(NewActivationTokenRequest)
      returns (NewActivationTokenResponse);
  rpc VerifyToken(VerifyTokenRequest) returns (VerifyTokenResponse);
}

message User {
  int64 id = 1;
  string username = 2;
  string email = 3;
  string role = 4;
  bool is_active = 5;
  string created_at = 6;
  string updated_at = 7;
}

message RegisterRequest {
  string email = 1;
  string username = 2;
  string password = 3;
  int32 app_id = 4;
}

message RegisterResponse {
  int64 user_id = 1;
  string activation_token = 2;
}

message LoginRequest {
  string email = 1;
  string password = 2;
  int32 app_id = 3;
}

message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message IsAdminRequest { int64 user_id = 1; }

message IsAdminResponse { bool is_admin = 1; }

message ActivateUserRequest {
  string activation_token = 1;
  int32 app_id = 2;
}

message ActivateUserResponse { User user = 1; }

message RenewAccessTokenRequest {
  int32 app_id = 1;
  string refresh_token = 2;
}

message RenewAccessTokenResponse { string access_token = 1; }

message GetUserRequest {
  int64 id = 1;
  string email = 2;
  bool is_active = 3;
}

message GetUserResponse { User user = 1; }

message NewActivationTokenRequest {
  string email = 1;
  int32 app_id = 2;
}

message NewActivationTokenResponse { string activation_token = 1; }

message VerifyTokenRequest {
  string token = 1;
  int32 app_id = 2;
}

message VerifyTokenResponse { bool is_valid = 1; }
